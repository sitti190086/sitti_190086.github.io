{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"../README.md","title":"Home"},{"location":"Munawwaroh/","text":"\u200b Metode numerik adalah solusi untuk memecahkan masalah matematika yang sulit atau bahkan tidak dapat terselesaikan menggunakan program paket. Metode numerik menjadi sarana yang efektif dan efisien untuk mempelajari penggunaan komputer. Metode numerik juga menjadi sarana untuk lebih memahami matematika. \u200b Metode numerik mengalami kemajuan yang cepat karena perkembangan dari komputer itu sendiri. salah satu permasalahan yang dipecahkan menggunakan meyode numerik adalah integrasi numerik. Integrasi numerik adalah salah satu cara untuk mendapatkan sebuah jawaban aproksimasi (hampiran/mendekati) dari sebuah pengintegralan yang dapat diselesaikan secara analitik. Integrasi numerik juga digunakan untuk menghitung luas daerah dan voume benda putar. \u200b Ada beberapa metode integrasi numerik yang dapat digunakan untuk menyelesaikan permasalahan matematika diantaranya : metode integrasi reiman, metode integrasi trapezoid dan metode integrasi trapezium. Salah satu contoh penggunaan metode integrasi numerik yaitu metode integrasi trapezoid dengan rumus : \u200b L_i=1/2 ((x_i )+f(x_(i+1) )).\u2206x_i \u200b atau L_i=1/2 (f_i+f_(i+1) ).\u2206x_i L= \u2211_(i=0)^(n-1)\u2592L_i L_i=\u2211_(i=0)^(n-1)\u2592\u30161/2 h(f_i \u3017+f_(i+1))=h/2(f_0+2f_1+2f_2+\u22ef+2f_(n=1)+f_n) L=h/2(f_0+2\u2211_(i=1)^(n-1)\u2592\u3016f_i+ f_n)\u3017 Dengan algoritma : a. Mendefinisikan y=f(x) b. Menghitung h, dimana h dapat diperoleh dari hasil batas atas (b) dikurangi batas bawah (a) dan dibagi dengan n. c. Mengitung L=h/2 (f_0+2\u2211_(i=1)^(n-1)\u2592\u3016f_i+f_n \u3017) contoh soal: \u222b_2^5\u2592\u3016x^2 exp\u2061(-x)dx\u3017 jawaban : import numpy as np def func ( x ): return ( x ** 2 ) * np . exp ( - x ) a = 2.0 b = 5.0 n = 50 dx = ( b - a ) / ( n - 1 ) x = np . linspace ( a , b , n ) sum = 0.0 for i in range ( 1 , n - 1 ): sum += func ( x [ i ]) hasil = 0.5 * dx * ( func ( x [ 0 ]) + 2.0 * sum + func ( x [ - 1 ])) print ( hasil ) 1.104017227842602 Referensi [https://repository.dinus.ac.id/docs/ajar/16-METODE_NUMERIK.pdf]:","title":"Integrasi Numerik"},{"location":"license/","text":"License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY Support Author \u00b6 Amazon wish list","title":"License"},{"location":"license/#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"license/#support_author","text":"Amazon wish list","title":"Support Author"},{"location":"material-for-mkdocs/","text":"Material for MkDocs \u00b6 MkDocs \u00b6 mkdocs/mkdocs: Project documentation with Markdown - GitHub Material for MkDocs \u00b6 squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs","text":"","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#mkdocs","text":"mkdocs/mkdocs: Project documentation with Markdown - GitHub","title":"MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs_1","text":"squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"sitti/","text":"Persamaan diferensial merupakan persoalan matematis yang sering dijumpai dalam bidang teknik lingkungan. Persamaan diferensial juga digunakan dalam pemodelan matematika dalam sains dan rekayasa. persamaan diferensial sering kali tidak dapat diselesaikan secara analitik. Metode numeric merupakan salah satu cara untuk menyelesaikan persamaan diferensial. Ada beberapa metode numeric yang digunakan untuk solusi dari persamaan diferensial biasa diantaranya: \u00b7 Metode deret taylor \u00b7 Metode euler \u00b7 Metode heun \u00b7 Metode Runge-Kutta Salah satu metode numeric yang akan digunakan untuk solusi pada persamaan difensial biasa kali ini adalah metode euler. Metode Euler merupakan metode paling sederhana yang diturunkan dari deret Taylor. Penyelesaian initial value problems menggunakan metode Euler dilakukan melalui : dy/dx=f(x,y) Nilai baru = nilai lama + slope x step size : y_i+1=y_i+f(x_i,y_i )h dimana i merupakan tahapan iterasi. Algoritma untuk Metode Euler : menentukan titik awal integrasi x0 dan y0. menentukan jumlah iterasi n dan step size h yang digunakan. melakukan integrasi menggunakan rumud diatas. contoh soal: dN/dt+kN(t)=0 N(0)=1000 soluasi analitik: dN/dt=-kN(t) dN/dt=-kdt in N=-kt+c N(t)=exp\u2061(-kt+c) N(0)=exp\u2061(c)=N_0 N(t)=N_0 exp\u2061(-kt) jawaban: import numpy as np import matplotlib.pyplot as plt def func ( N , t ): k = 0.02 return - k * N #inisial Condition / Boundary Condition N0 = 1000 t0 = 0 #proses diskritisasi ndata = 100 tn = 100 t = np . linspace ( t0 , tn , ndata ) N = np . zeros ( ndata ) N [ 0 ] = N0 h = t [ 1 ] - t [ 0 ] for i in range ( 0 , ndata - 1 ): N [ i + 1 ] = N [ i ] + h * func ( N [ i ], t [ i ]) #fungsi analitik k = 0.02 NA = N0 * np . exp ( - k * t ) #plot plt . plot ( t , NA , 'red' , Label = 'analitik' ) plt . plot ( t , N , 'x' , color = 'black' , label = 'Euler' ) plt . show () Referensi: [https://bookdown.org/moh_rosidi2610/Metode_Numerik/diffeq.html]:","title":"Solusi Numerik dari Persamaan Diferensial Biasa"},{"location":"waroh/","text":"Sistem persamaan linear merupakan suatu model masalah matematika yang banyak diumpai. Sering kali sistem persamaan linear terdapat dalam berbagai disiplin ilmu termasuk matematika, statistika, dan lainnya. Sistem persamaan linear muncul secara langsung dari masalah-masalah nyata. Sistem persamaan linear juga merupakan bagian dari proses penyelesaian masalah-masalah lain misalnya penyelesaian sistem persamaan nonlinear simultan. Bentuk umum sistem persamaan linear yang akan dibahas kali ini adalah suatu sistem persamaan linear yang terdiri atas sejumlah berhingga pesamaan linear dalam jumlah berhingga variabel. bentuk yang di maksud adalah: a_(11) x_1+a_(12) x_2+\u22ef+a_(1n) x_n=b_1 a_(21) x_1+a_(22) x_2+\u22ef+a_(2n) x_n=b_2 \u200b sehingga : a_(11) x_1+a_(n2) x_2+\u22ef+a_(mn) x_n=b_n \u200b Adapun metode yang akan digunakan untuk solusi numerik dari sistem persamaan aljabar linear kali ini diantaranya : Metode Jacobi Metode Jacobi merupakan salah satu metode atau cara penyelesaikan untuk solusi sistem persamaan linear. Metode Jacobi adalah metode konvergen. adapun iterasi jacobi memiliki rumus persamaan sebagai berikut: x_i=(b_i-\u2211_(i\u2260ji)\u2592\u3016a_(ij) x_j \u3017)/a_(ii) atau x_1^1=(b_1-a_(12) x_2^0-a_(13) x_3^0)/a_(11) x_2^1=(b_2-a_(21) x_1^0-a_(23) x_3^0)/a_(22) x_3^1=(b_3-a_(31) x_1^0-a_(32) x_2^0)/a_(33) iterasi berakhir jika: x_1^(n-1)\u2248x_1^n,x_2^(n-1)\u2248x_2^n,x_3^(n-1)\u2248x_3^n contoh soal : \u30163x\u3017_1-\u30160,1x\u3017_2-\u30160,2x\u3017_3=7,8 \u30160,1x\u3017_1+\u30167x\u3017_2-\u30160,3x\u3017_3=-19,3 \u30160,3x\u3017_1-\u30160,2x\u3017_2+\u301610x\u3017_3=17,4 jawaban : ``` def x1 (x2,x3): return (7.85 + (0.1 * x2) + (0.2 * x3))/3 def x2 (x1,x3): return (-19.3 + (0.2 * x1) - (0.3 * x3))/7 def x3 (x1,x2): return (-9.87 + (0.2 * x1) + (0.3 * x2))/10 def error (n,o): return ((n-o)/n)*100 bx1, bx2, bx3= 0, 0, 0 tabel = \"{0:1} | {1:7} | {2:7} | {3:7} | {4:7} | {5:7} | {6:7}\" print(tabel.format(\"i\",\"x1\",\"x2\",\"x3\",\"E1\",\"E2\",\"E3\")) for i in range(0,5): if i==0: print(tabel.format(i,bx1,bx2,bx3,\"-\",\"-\",\"-\")) cx1 = bx1 cx2 = bx2 cx3 = bx3 else: cx1 = eval(\"{0:.3f}\".format(x1(bx2,bx3))) cx2 = eval(\"{0:.3f}\".format(x2(bx1,bx3))) cx3 = eval(\"{0:.3f}\".format(x3(bx1,bx2))) print(tabel.format(i, cx1, cx2, cx3,\"{0:.2f}\".format(error(cx1,bx1)), \"{0:.2f}\".format(error(cx2,bx2)), \"{0:.2f}\".format(error(cx3,bx3)))) bx1 = cx1 bx2 = cx2 bx3 = cx3 ``` i | x1 | x2 | x3 | E1 | E2 | E3 0 | 0 | 0 | 0 | - | - | - 1 | 2.617 | -2.757 | -0.987 | 100.00 | 100.00 | 100.00 2 | 2.459 | -2.64 | -1.017 | -6.43 | -4.43 | 2.95 3 | 2.461 | -2.643 | -1.017 | 0.08 | 0.11 | -0.00 4 | 2.461 | -2.643 | -1.017 | 0.00 | -0.00 | -0.00 Metode Gaus-Seidel Metode iterasi Gauss-Seidel merupakan metode penyelesaian persamaan serentak melalui proses iterasi dengan menggunakan nilai awal pada prosesnya sehingga diperoleh nilai yang sesungguhnya dan syarat persamaan tersebut haruslah dominan secara diagonal. Didalam metode jacobi nilai x1 yang dihitung dari persamaan pertama tidak difunakan untuk menghitung nilai x2 dengan persamaan kedua. Begitu juga dengan nilai x2 tidak digunakan untuk mencari x3. sehingga nilai-nilai tersebut tidak dimanfaatkan. Sebernarnya nilai-nilai baru tersebut lebih baik dari nilai-nilai yang lama. Didalam metode gauss seidel nilai-nilai tersebut digunakan untuk menghitung variabel berikutnya. contoh soal: x_1+\u30162x\u3017_2+x_3=10 \u30162x\u3017_1+\u30163x\u3017_2+\u30163x\u3017_3=13 x_1+x_2+x_3=5 \u200b jawaban : #mendefinisikan fungsi # sebagai matriks A , Solusi dan matriks B . def seidel ( a , x , b ) : #Mencari panjang a ( 3 ) n = len ( a ) # for loop selama 3 kali untuk menghitung x , y , z for j in range ( 0 , n ) : # variabel temp d untuk menyimpan b [ j ] d = b [ j ] # untuk menghitung xi , yi , zi masing - masing for i in range ( 0 , n ) : if ( j != i ) : d -= a [ j ][ i ] * x [ i ] # updating the value of our solution x [ j ] = d / a [ j ][ j ] # returning our updated solution return x # int ( input ()) input sebagai jumlah variabel yang akan diselesaikan n = 3 a = [] b = [] # solusi awal tergantung pada n ( di sini n = 3 ) x = [ 0, 0, 0 ] a = [ [1, 2, 1 ] , [ 2, 3, 3 ] , [ 1, 1, 1 ] ] b = [ 10,13,5 ] print ( x ) #loop dijalankan selama m kali tergantung pada nilai error m for i in range ( 0 , 25 ) : x = seidel ( a , x , b ) #print setiap kali solusi yang diperbarui print ( x ) [0, 0, 0] [10.0, -2.3333333333333335, -2.6666666666666665] [17.333333333333336, -4.555555555555557, -7.777777777777779] [26.888888888888893, -5.814814814814817, -16.074074074074076] [37.70370370370371, -4.7283950617283965, -27.975308641975314] [47.4320987654321, 0.6872427983539117, -43.119341563786016] [51.744855967078195, 12.956104252400555, -59.70096021947875] [43.788751714677645, 34.84179240969365, -73.6305441243713] [13.946959304983992, 68.6659045877153, -77.6128638926993] [-49.71894528273131, 115.0921607478535, -60.373215465122186] [-159.81110603058482, 171.24728615217873, -6.436180121593907] [-326.05839218276355, 228.14177491010295, 102.9166172726606] [-549.2001670928665, 267.5501607892504, 286.6500063036161] [-811.750327882117, 258.85021228446186, 557.900115597655] [-1065.6005401665789, 156.8335778467309, 913.766962319848] [-1217.4341180133097, -97.81088364430813, 1320.2450016576179] [-1114.6232343690017, -572.8295120782835, 1692.4527464472853] [-536.7937222907183, -1330.2569315868066, 1872.0506538775248] [798.4632092960883, -2400.026126741584, 1606.5629174454957] [3203.4893360376723, -3737.889141470611, 539.3998054329386] [6946.378477508283, -5165.985457105127, -1775.3930204031558] [12117.363934613411, -6298.5162693391185, -5813.847665274293] [18420.88020395253, -6462.405804027393, -11953.474399925137] [24888.28600797992, -4634.382938728144, -20248.903069251777] [29527.668946708065, 568.1237714464005, -30090.792718154466] [28964.545175261665, 10785.429267980022, -39744.974443241685] Referensi: [https://www.slideshare.net/KhannalPakinde/makalah-metode-numerik-sistem-persamaan-linear]:","title":"Solusi Numerik dari Sistem Persamaan Aljabar Linear"},{"location":"extensions/code-hilite/","text":"CodeHilite \u00b6 CodeHilite - Material for MkDocs Supported languages - Pygments Configure mkdocs.yml \u00b6 markdown_extensions: - codehilite","title":"Code Hilite"},{"location":"extensions/code-hilite/#codehilite","text":"CodeHilite - Material for MkDocs Supported languages - Pygments","title":"CodeHilite"},{"location":"extensions/code-hilite/#configure_mkdocsyml","text":"markdown_extensions: - codehilite","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/","text":"Footnote \u00b6 Footnotes - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - footnotes Example \u00b6 Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Footnote"},{"location":"extensions/footnote/#footnote","text":"Footnotes - Material for MkDocs","title":"Footnote"},{"location":"extensions/footnote/#configure_mkdocsyml","text":"markdown_extensions: - footnotes","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/#example","text":"Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Example"},{"location":"extensions/mathjax/","text":"MathJax \u00b6 PyMdown - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - mdx_math: enable_dollar_delimiter: True Example code \u00b6 $$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$ Example rendering \u00b6 P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"MathJax"},{"location":"extensions/mathjax/#mathjax","text":"PyMdown - Material for MkDocs","title":"MathJax"},{"location":"extensions/mathjax/#configure_mkdocsyml","text":"markdown_extensions: - mdx_math: enable_dollar_delimiter: True","title":"Configure mkdocs.yml"},{"location":"extensions/mathjax/#example_code","text":"$$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$","title":"Example code"},{"location":"extensions/mathjax/#example_rendering","text":"P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"Example rendering"},{"location":"getting-started/docker/","text":"Start with Docker \u00b6 Public docker image \u00b6 Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub docker-compose \u00b6 Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"Docker"},{"location":"getting-started/docker/#start_with_docker","text":"","title":"Start with Docker"},{"location":"getting-started/docker/#public_docker_image","text":"Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub","title":"Public docker image"},{"location":"getting-started/docker/#docker-compose","text":"Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"docker-compose"},{"location":"getting-started/download-boilerplate/","text":"Download boilerplate \u00b6 Git clone \u00b6 git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate Download zip \u00b6 wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/main.zip' unzip main.zip cd mkdocs-material-boilerplate-main \ud83d\udc49 Click me to download zip","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#download_boilerplate","text":"","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#git_clone","text":"git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate","title":"Git clone"},{"location":"getting-started/download-boilerplate/#download_zip","text":"wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/main.zip' unzip main.zip cd mkdocs-material-boilerplate-main \ud83d\udc49 Click me to download zip","title":"Download zip"},{"location":"getting-started/invoke/","text":"Serve and open with invoke \u00b6 invoke \u00b6 Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution. Serve and open \u00b6 Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml Show all tasks \u00b6 $ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open_with_invoke","text":"","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#invoke","text":"Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution.","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open","text":"Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml","title":"Serve and open"},{"location":"getting-started/invoke/#show_all_tasks","text":"$ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Show all tasks"},{"location":"getting-started/pip/","text":"Start with pip (Anaconda, Miniconda) \u00b6 pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"pip"},{"location":"getting-started/pip/#start_with_pip_anaconda_miniconda","text":"pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pipenv/","text":"Start with pipenv \u00b6 pipenv \u00b6 Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans. Install all packages \u00b6 pipenv sync --dev # Installs all packages specified in Pipfile.lock. Run MkDocs \u00b6 pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve pipenv run \u00b6 pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv"},{"location":"getting-started/pipenv/#start_with_pipenv","text":"","title":"Start with pipenv"},{"location":"getting-started/pipenv/#pipenv","text":"Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans.","title":"pipenv"},{"location":"getting-started/pipenv/#install_all_packages","text":"pipenv sync --dev # Installs all packages specified in Pipfile.lock.","title":"Install all packages"},{"location":"getting-started/pipenv/#run_mkdocs","text":"pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve","title":"Run MkDocs"},{"location":"getting-started/pipenv/#pipenv_run","text":"pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv run"},{"location":"hosting-and-deployment/aws-amplify-console/","text":"Host on AWS Amplify Console \u00b6 AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"AWS Amplify Console"},{"location":"hosting-and-deployment/aws-amplify-console/#host_on_aws_amplify_console","text":"AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"Host on AWS Amplify Console"},{"location":"hosting-and-deployment/combinations/","text":"Hosting and Deployment \u00b6 GitHub Pages and GitHub \u00b6 Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions GitLab Pages and GitLab \u00b6 Host source code on GitLab. Build and deploy with GitLab CI/CD. Netlify \u00b6 Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify. AWS Amplify Console \u00b6 Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"Combinations"},{"location":"hosting-and-deployment/combinations/#hosting_and_deployment","text":"","title":"Hosting and Deployment"},{"location":"hosting-and-deployment/combinations/#github_pages_and_github","text":"Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions","title":"GitHub Pages and GitHub"},{"location":"hosting-and-deployment/combinations/#gitlab_pages_and_gitlab","text":"Host source code on GitLab. Build and deploy with GitLab CI/CD.","title":"GitLab Pages and GitLab"},{"location":"hosting-and-deployment/combinations/#netlify","text":"Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify.","title":"Netlify"},{"location":"hosting-and-deployment/combinations/#aws_amplify_console","text":"Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"AWS Amplify Console"},{"location":"hosting-and-deployment/github-pages/","text":"Host on GitHub Pages \u00b6 Demo site on GitHub Pages (build & deploy with GitHub Actions) Build and deploy with GitHub Actions \u00b6 peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details. Build and deploy with mkdocs gh-deploy \u00b6 pipenv \u00b6 pipenv run deploy # OR pipenv shell mkdocs gh-deploy # OR pipenv run mkdocs gh-deploy","title":"GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#host_on_github_pages","text":"Demo site on GitHub Pages (build & deploy with GitHub Actions)","title":"Host on GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_github_actions","text":"peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details.","title":"Build and deploy with GitHub Actions"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_mkdocs_gh-deploy","text":"","title":"Build and deploy with mkdocs gh-deploy"},{"location":"hosting-and-deployment/github-pages/#pipenv","text":"pipenv run deploy # OR pipenv shell mkdocs gh-deploy # OR pipenv run mkdocs gh-deploy","title":"pipenv"},{"location":"hosting-and-deployment/gitlab-pages/","text":"Host on GitLab Pages \u00b6 See .gitlab-ci.yml","title":"GitLab Pages"},{"location":"hosting-and-deployment/gitlab-pages/#host_on_gitlab_pages","text":"See .gitlab-ci.yml","title":"Host on GitLab Pages"},{"location":"hosting-and-deployment/netlify/","text":"Host on Netlify \u00b6 Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Netlify"},{"location":"hosting-and-deployment/netlify/#host_on_netlify","text":"Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Host on Netlify"}]}